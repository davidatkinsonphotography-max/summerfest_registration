# Generated by Django 5.2.5 on 2025-09-07 08:37

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='child',
            name='child_class',
            field=models.CharField(choices=[('creche', 'Creche - 0-2yrs old'), ('tackers', 'Little Tackers - 3yrs-Kindy (2026)'), ('minis', 'Minis - School Years 1-2 (2026)'), ('nitro', 'Nitro - School Years 3-4 (2026)'), ('56ers', '56ers - School Years 5-6 (2026)')], max_length=20),
        ),
        migrations.AlterField(
            model_name='parentprofile',
            name='emergency_contact_relationship',
            field=models.CharField(choices=[('other_parent', 'Other Parent'), ('grandparent', 'Grandparent'), ('uncle_aunty', 'Uncle/Aunty'), ('Sibling', 'Sibling'), ('family_friend', 'Family Friend'), ('neighbour', 'Neighbour'), ('other', 'Other')], max_length=20),
        ),
        migrations.AlterField(
            model_name='parentprofile',
            name='how_heard_about',
            field=models.CharField(choices=[('friend', 'My Friend Recommended (please tell us who in additional information)'), ('church', 'At Lighthouse Church'), ('kids_club', "Lighthouse Kids' Club"), ('facebookpage', 'Facebook page … [please fill in the page name in ‘additional information’]'), ('facebookad', 'Facebook advertisement'), ('schoolflyerhome', 'School Flyer sent home ... [please fill in which school in ‘additional information’]'), ('schoolnews', 'School Newsletter … [please fill in which school in ‘additional information’]'), ('schoolflyerschool', 'School Flyer collected from school ... [please fill in which school in ‘additional information’]'), ('preschool', "Flyer at Preschool/day care ... [please fill in where in 'additional information'"), ('flyer', 'A Summerfest flyer given to me at… [please fill in where in ‘additional information’]'), ('banner', 'A banner/poster located at ... … [please fill in where in ‘additional information’]'), ('email', 'I received an email'), ('websearch', 'Web Search'), ('homevisit', 'Someone visited me'), ('newspaper', 'Newspaper/Magazine … [please fill in where in ‘additional information’]'), ('radio', 'Rhema FM'), ('scripture', "My child's scripture class")], max_length=20),
        ),
        migrations.AlterField(
            model_name='teacherprofile',
            name='assigned_classes',
            field=models.CharField(choices=[('creche', 'Creche - 0-2yrs old'), ('tackers', 'Little Tackers - 3yrs-Kindy (2026)'), ('minis', 'Minis - School Years 1-2 (2026)'), ('nitro', 'Nitro - School Years 3-4 (2026)'), ('56ers', '56ers - School Years 5-6 (2026)')], help_text='Classes this teacher is responsible for', max_length=100),
        ),
        migrations.CreateModel(
            name='PaymentAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('weekly_charge_child', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('weekly_charge_family', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('current_week_start', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_account', to='registration.parentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit - Money Added'), ('debit', 'Debit - Money Deducted')], max_length=10)),
                ('payment_method', models.CharField(choices=[('stripe', 'Online Card Payment'), ('cash', 'Cash Payment'), ('eftpos', 'EFTPOS Payment'), ('system', 'System Transaction')], default='system', max_length=10)),
                ('description', models.CharField(max_length=200)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=200, null=True)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='registration.paymentaccount')),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DailyAttendanceCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('children_count', models.IntegerField()),
                ('calculated_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('children', models.ManyToManyField(related_name='daily_charges', to='registration.child')),
                ('payment_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_charges', to='registration.paymentaccount')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('payment_account', 'date')},
            },
        ),
    ]
