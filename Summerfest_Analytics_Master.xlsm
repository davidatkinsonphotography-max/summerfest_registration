' ============================================================================
' SUMMERFEST ANALYTICS MASTER - VBA CODE
' ============================================================================
' This is the VBA code content for the Excel workbook
' Copy this code into the VBA editor (Alt+F11) in Excel
' ============================================================================

Option Explicit

' Main module - paste this into a new module
Sub GenerateAllReports()
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    On Error Resume Next
    
    ' Clear all report sheets except raw data
    ClearReportSheets
    
    ' Generate all reports
    Call CreateRegistrationSummary
    Call CreateClassAnalysis
    Call CreateDemographicsReport
    Call CreateAttendanceAnalysis
    Call CreatePaymentAnalysis
    Call CreateConversationAnalysis
    Call CreateGeographicAnalysis
    Call CreateHealthSafetyReport
    Call CreateEngagementMetrics
    Call CreateTrendAnalysis
    Call CreateExecutiveDashboard
    
    ' Format all sheets
    Call FormatAllSheets
    
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    
    MsgBox "All reports generated successfully!", vbInformation, "Analytics Complete"
End Sub

Sub ClearReportSheets()
    Dim ws As Worksheet
    Dim sheetNames As Variant
    Dim i As Integer
    
    sheetNames = Array("Dashboard", "Registration", "Classes", "Demographics", _
                      "Attendance", "Payments", "Conversations", "Geography", _
                      "Health", "Engagement", "Trends", "Pivot_Data")
    
    ' Delete existing sheets
    For i = 0 To UBound(sheetNames)
        Set ws = Nothing
        On Error Resume Next
        Set ws = ThisWorkbook.Sheets(sheetNames(i))
        If Not ws Is Nothing Then
            Application.DisplayAlerts = False
            ws.Delete
            Application.DisplayAlerts = True
        End If
    Next i
    
    ' Create new sheets
    For i = 0 To UBound(sheetNames)
        ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)).Name = sheetNames(i)
    Next i
End Sub

Sub CreateRegistrationSummary()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long, i As Long
    Dim totalFamilies As Long, totalChildren As Long
    Dim registrationDates As Object
    
    Set wsData = ThisWorkbook.Sheets("Data") ' Assuming raw data is in "Data" sheet
    Set wsReport = ThisWorkbook.Sheets("Registration")
    Set registrationDates = CreateObject("Scripting.Dictionary")
    
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    ' Count unique families and total children
    Dim families As Object
    Set families = CreateObject("Scripting.Dictionary")
    
    For i = 2 To lastRow ' Skip header
        If wsData.Cells(i, 1) <> "" Then ' Assuming parent name in column A
            families(wsData.Cells(i, 1)) = families(wsData.Cells(i, 1)) + 1
            totalChildren = totalChildren + 1
        End If
    Next i
    
    totalFamilies = families.Count
    
    ' Write summary
    With wsReport
        .Cells(1, 1) = "SUMMERFEST REGISTRATION SUMMARY"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        .Cells(3, 1) = "Total Families Registered:"
        .Cells(3, 2) = totalFamilies
        .Cells(4, 1) = "Total Children Registered:"
        .Cells(4, 2) = totalChildren
        .Cells(5, 1) = "Average Children per Family:"
        .Cells(5, 2) = Round(totalChildren / totalFamilies, 2)
        
        ' Registration timeline
        .Cells(7, 1) = "REGISTRATION TIMELINE"
        .Cells(7, 1).Font.Bold = True
        
        ' Class distribution
        .Cells(15, 1) = "CLASS DISTRIBUTION"
        .Cells(15, 1).Font.Bold = True
        Call AnalyzeClassDistribution(wsData, wsReport, 16, lastRow)
        
        ' Church attendance analysis
        .Cells(25, 1) = "CHURCH ATTENDANCE BREAKDOWN"
        .Cells(25, 1).Font.Bold = True
        Call AnalyzeChurchAttendance(wsData, wsReport, 26, lastRow)
        
        ' How they heard about us
        .Cells(35, 1) = "HOW FAMILIES HEARD ABOUT SUMMERFEST"
        .Cells(35, 1).Font.Bold = True
        Call AnalyzeHearAbout(wsData, wsReport, 36, lastRow)
    End With
End Sub

Sub CreateClassAnalysis()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long, i As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Classes")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "COMPREHENSIVE CLASS ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Class enrollment numbers
        .Cells(3, 1) = "CLASS ENROLLMENT SUMMARY"
        .Cells(3, 1).Font.Bold = True
        
        ' Detailed class breakdown
        .Cells(12, 1) = "DETAILED CLASS BREAKDOWN"
        .Cells(12, 1).Font.Bold = True
        
        ' Age distribution analysis
        .Cells(22, 1) = "AGE DISTRIBUTION ANALYSIS"
        .Cells(22, 1).Font.Bold = True
        Call AnalyzeAgeDistribution(wsData, wsReport, 23, lastRow)
        
        ' Gender distribution by class
        .Cells(32, 1) = "GENDER DISTRIBUTION BY CLASS"
        .Cells(32, 1).Font.Bold = True
        Call AnalyzeGenderByClass(wsData, wsReport, 33, lastRow)
        
        ' Medical needs by class
        .Cells(42, 1) = "MEDICAL & DIETARY NEEDS BY CLASS"
        .Cells(42, 1).Font.Bold = True
        Call AnalyzeMedicalNeedsByClass(wsData, wsReport, 43, lastRow)
    End With
End Sub

Sub CreateDemographicsReport()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Demographics")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "DEMOGRAPHIC ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Geographic distribution
        .Cells(3, 1) = "GEOGRAPHIC DISTRIBUTION"
        .Cells(3, 1).Font.Bold = True
        Call AnalyzeGeographicDistribution(wsData, wsReport, 4, lastRow)
        
        ' Family size analysis
        .Cells(15, 1) = "FAMILY SIZE ANALYSIS"
        .Cells(15, 1).Font.Bold = True
        Call AnalyzeFamilySize(wsData, wsReport, 16, lastRow)
        
        ' Emergency contact relationships
        .Cells(25, 1) = "EMERGENCY CONTACT RELATIONSHIPS"
        .Cells(25, 1).Font.Bold = True
        Call AnalyzeEmergencyContacts(wsData, wsReport, 26, lastRow)
    End With
End Sub

Sub CreateAttendanceAnalysis()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Attendance")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "ATTENDANCE ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Daily attendance patterns
        .Cells(3, 1) = "DAILY ATTENDANCE PATTERNS"
        .Cells(3, 1).Font.Bold = True
        
        ' Peak hours analysis
        .Cells(12, 1) = "PEAK HOURS ANALYSIS"
        .Cells(12, 1).Font.Bold = True
        
        ' Duration analysis
        .Cells(20, 1) = "SESSION DURATION ANALYSIS"
        .Cells(20, 1).Font.Bold = True
        
        ' Repeat attendance
        .Cells(28, 1) = "REPEAT ATTENDANCE PATTERNS"
        .Cells(28, 1).Font.Bold = True
        
        ' No-shows analysis
        .Cells(36, 1) = "NO-SHOWS & LATE ARRIVALS"
        .Cells(36, 1).Font.Bold = True
    End With
End Sub

Sub CreatePaymentAnalysis()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Payments")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "PAYMENT & FINANCIAL ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Revenue summary
        .Cells(3, 1) = "REVENUE SUMMARY"
        .Cells(3, 1).Font.Bold = True
        
        ' Payment methods analysis
        .Cells(12, 1) = "PAYMENT METHODS BREAKDOWN"
        .Cells(12, 1).Font.Bold = True
        
        ' Outstanding balances
        .Cells(20, 1) = "OUTSTANDING BALANCES"
        .Cells(20, 1).Font.Bold = True
        
        ' Payment timing patterns
        .Cells(28, 1) = "PAYMENT TIMING PATTERNS"
        .Cells(28, 1).Font.Bold = True
        
        ' Family payment patterns
        .Cells(36, 1) = "FAMILY PAYMENT BEHAVIOR"
        .Cells(36, 1).Font.Bold = True
    End With
End Sub

Sub CreateConversationAnalysis()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Conversations")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "PARENT CONVERSATION ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Conversation volume by day
        .Cells(3, 1) = "CONVERSATIONS BY DAY"
        .Cells(3, 1).Font.Bold = True
        
        ' Church connection analysis
        .Cells(12, 1) = "CHURCH CONNECTION STATUS"
        .Cells(12, 1).Font.Bold = True
        
        ' Interest in future events
        .Cells(20, 1) = "INTEREST IN FUTURE EVENTS"
        .Cells(20, 1).Font.Bold = True
        
        ' Faith status analysis
        .Cells(28, 1) = "FAITH STATUS BREAKDOWN"
        .Cells(28, 1).Font.Bold = True
        
        ' Welcomer performance
        .Cells(36, 1) = "WELCOMER TEAM PERFORMANCE"
        .Cells(36, 1).Font.Bold = True
    End With
End Sub

Sub CreateGeographicAnalysis()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Geography")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "GEOGRAPHIC REACH ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Postcode analysis
        .Cells(3, 1) = "POSTCODE DISTRIBUTION"
        .Cells(3, 1).Font.Bold = True
        
        ' Distance analysis
        .Cells(15, 1) = "ESTIMATED TRAVEL DISTANCES"
        .Cells(15, 1).Font.Bold = True
        
        ' Suburb penetration
        .Cells(25, 1) = "SUBURB PENETRATION RATES"
        .Cells(25, 1).Font.Bold = True
        
        ' Catchment area analysis
        .Cells(35, 1) = "CATCHMENT AREA INSIGHTS"
        .Cells(35, 1).Font.Bold = True
    End With
End Sub

Sub CreateHealthSafetyReport()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Health")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "HEALTH & SAFETY ANALYSIS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Medical conditions summary
        .Cells(3, 1) = "MEDICAL CONDITIONS SUMMARY"
        .Cells(3, 1).Font.Bold = True
        
        ' Dietary requirements analysis
        .Cells(15, 1) = "DIETARY REQUIREMENTS BREAKDOWN"
        .Cells(15, 1).Font.Bold = True
        
        ' Allergy analysis
        .Cells(25, 1) = "ALLERGY PATTERNS & TRENDS"
        .Cells(25, 1).Font.Bold = True
        
        ' Photo consent analysis
        .Cells(35, 1) = "PHOTO CONSENT STATISTICS"
        .Cells(35, 1).Font.Bold = True
        
        ' Risk assessment data
        .Cells(40, 1) = "RISK ASSESSMENT INSIGHTS"
        .Cells(40, 1).Font.Bold = True
    End With
End Sub

Sub CreateEngagementMetrics()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Engagement")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "ENGAGEMENT & OUTREACH METRICS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Marketing effectiveness
        .Cells(3, 1) = "MARKETING CHANNEL EFFECTIVENESS"
        .Cells(3, 1).Font.Bold = True
        
        ' Community connections
        .Cells(15, 1) = "COMMUNITY CONNECTION ANALYSIS"
        .Cells(15, 1).Font.Bold = True
        
        ' Referral patterns
        .Cells(25, 1) = "WORD-OF-MOUTH REFERRAL PATTERNS"
        .Cells(25, 1).Font.Bold = True
        
        ' Engagement scoring
        .Cells(35, 1) = "FAMILY ENGAGEMENT SCORING"
        .Cells(35, 1).Font.Bold = True
    End With
End Sub

Sub CreateTrendAnalysis()
    Dim wsData As Worksheet, wsReport As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    Set wsReport = ThisWorkbook.Sheets("Trends")
    lastRow = wsData.Cells(wsData.Rows.Count, 1).End(xlUp).Row
    
    With wsReport
        .Cells(1, 1) = "TREND ANALYSIS & PREDICTIONS"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Registration trends over time
        .Cells(3, 1) = "REGISTRATION TRENDS OVER TIME"
        .Cells(3, 1).Font.Bold = True
        
        ' Seasonal patterns
        .Cells(15, 1) = "SEASONAL ATTENDANCE PATTERNS"
        .Cells(15, 1).Font.Bold = True
        
        ' Growth projections
        .Cells(25, 1) = "GROWTH PROJECTIONS"
        .Cells(25, 1).Font.Bold = True
        
        ' Capacity planning
        .Cells(35, 1) = "CAPACITY PLANNING INSIGHTS"
        .Cells(35, 1).Font.Bold = True
    End With
End Sub

Sub CreateExecutiveDashboard()
    Dim wsReport As Worksheet
    Set wsReport = ThisWorkbook.Sheets("Dashboard")
    
    With wsReport
        .Cells(1, 1) = "SUMMERFEST EXECUTIVE DASHBOARD"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 18
        .Cells(1, 1).Interior.Color = RGB(68, 114, 196)
        .Cells(1, 1).Font.Color = RGB(255, 255, 255)
        
        ' Key metrics summary
        .Cells(3, 1) = "KEY PERFORMANCE INDICATORS"
        .Cells(3, 1).Font.Bold = True
        .Cells(3, 1).Font.Size = 14
        
        ' Quick stats boxes
        Call CreateKPIBoxes(wsReport)
        
        ' Charts placeholders
        .Cells(15, 1) = "VISUAL ANALYTICS"
        .Cells(15, 1).Font.Bold = True
        
        ' Action items
        .Cells(30, 1) = "RECOMMENDED ACTIONS"
        .Cells(30, 1).Font.Bold = True
        
        ' Success metrics
        .Cells(40, 1) = "SUCCESS METRICS"
        .Cells(40, 1).Font.Bold = True
    End With
End Sub

' ============================================================================
' HELPER FUNCTIONS
' ============================================================================

Sub AnalyzeClassDistribution(wsData As Worksheet, wsReport As Worksheet, startRow As Long, lastRow As Long)
    Dim classes As Object
    Dim i As Long, classColumn As Long
    
    Set classes = CreateObject("Scripting.Dictionary")
    classColumn = 5 ' Assuming class is in column E
    
    For i = 2 To lastRow
        If wsData.Cells(i, classColumn) <> "" Then
            classes(wsData.Cells(i, classColumn)) = classes(wsData.Cells(i, classColumn)) + 1
        End If
    Next i
    
    ' Write results
    Dim key As Variant
    Dim row As Long
    row = startRow
    
    wsReport.Cells(row, 1) = "Class"
    wsReport.Cells(row, 2) = "Count"
    wsReport.Cells(row, 3) = "Percentage"
    row = row + 1
    
    For Each key In classes.Keys
        wsReport.Cells(row, 1) = key
        wsReport.Cells(row, 2) = classes(key)
        wsReport.Cells(row, 3) = Format(classes(key) / (lastRow - 1), "0.0%")
        row = row + 1
    Next key
End Sub

Sub AnalyzeAgeDistribution(wsData As Worksheet, wsReport As Worksheet, startRow As Long, lastRow As Long)
    ' Age analysis based on date of birth
    Dim ages As Object
    Dim i As Long, dobColumn As Long
    Dim age As Integer
    
    Set ages = CreateObject("Scripting.Dictionary")
    dobColumn = 3 ' Assuming DOB is in column C
    
    For i = 2 To lastRow
        If IsDate(wsData.Cells(i, dobColumn)) Then
            age = DateDiff("yyyy", wsData.Cells(i, dobColumn), Date)
            If ages.Exists(age) Then
                ages(age) = ages(age) + 1
            Else
                ages(age) = 1
            End If
        End If
    Next i
    
    ' Write results
    Dim key As Variant
    Dim row As Long
    row = startRow
    
    wsReport.Cells(row, 1) = "Age"
    wsReport.Cells(row, 2) = "Count"
    wsReport.Cells(row, 3) = "Percentage"
    row = row + 1
    
    For Each key In ages.Keys
        wsReport.Cells(row, 1) = key & " years"
        wsReport.Cells(row, 2) = ages(key)
        wsReport.Cells(row, 3) = Format(ages(key) / (lastRow - 1), "0.0%")
        row = row + 1
    Next key
End Sub

Sub CreateKPIBoxes(ws As Worksheet)
    ' Create formatted KPI boxes
    Dim box1 As Range, box2 As Range, box3 As Range, box4 As Range
    
    Set box1 = ws.Range("B5:D7")
    Set box2 = ws.Range("F5:H7")
    Set box3 = ws.Range("B9:D11")
    Set box4 = ws.Range("F9:H11")
    
    ' Format boxes
    box1.Interior.Color = RGB(217, 225, 242)
    box2.Interior.Color = RGB(226, 239, 218)
    box3.Interior.Color = RGB(252, 228, 214)
    box4.Interior.Color = RGB(242, 220, 219)
    
    ' Add borders
    box1.BorderAround ColorIndex:=1, Weight:=xlMedium
    box2.BorderAround ColorIndex:=1, Weight:=xlMedium
    box3.BorderAround ColorIndex:=1, Weight:=xlMedium
    box4.BorderAround ColorIndex:=1, Weight:=xlMedium
    
    ' Add content
    ws.Cells(5, 2) = "Total Families"
    ws.Cells(6, 2) = "=Registration.B3"
    ws.Cells(7, 2) = "Registered"
    
    ws.Cells(5, 6) = "Total Children"
    ws.Cells(6, 6) = "=Registration.B4"
    ws.Cells(7, 6) = "Enrolled"
    
    ws.Cells(9, 2) = "Avg Family Size"
    ws.Cells(10, 2) = "=Registration.B5"
    ws.Cells(11, 2) = "Children/Family"
    
    ws.Cells(9, 6) = "Revenue"
    ws.Cells(10, 6) = "=Payments.B5"
    ws.Cells(11, 6) = "Total Income"
End Sub

Sub FormatAllSheets()
    Dim ws As Worksheet
    
    For Each ws In ThisWorkbook.Sheets
        If ws.Name <> "Data" Then
            With ws
                .Cells.Font.Name = "Segoe UI"
                .Cells.Font.Size = 10
                .Columns.AutoFit
                .Range("A:Z").HorizontalAlignment = xlLeft
            End With
        End If
    Next ws
End Sub

' ============================================================================
' CHART CREATION FUNCTIONS
' ============================================================================

Sub CreateCharts()
    ' Create various charts for visual analysis
    Call CreateClassDistributionChart
    Call CreateAttendanceTrendChart
    Call CreateRevenueChart
    Call CreateGeographicChart
End Sub

Sub CreateClassDistributionChart()
    Dim ws As Worksheet
    Dim chartObj As ChartObject
    
    Set ws = ThisWorkbook.Sheets("Classes")
    Set chartObj = ws.ChartObjects.Add(Left:=300, Top:=50, Width:=400, Height:=300)
    
    With chartObj.Chart
        .ChartType = xlPie
        .SetSourceData ws.Range("A4:B10") ' Adjust range as needed
        .HasTitle = True
        .ChartTitle.Text = "Class Distribution"
    End With
End Sub

' ============================================================================
' DATA VALIDATION AND QUALITY CHECKS
' ============================================================================

Sub ValidateData()
    Dim wsData As Worksheet
    Dim wsValidation As Worksheet
    Dim lastRow As Long
    
    Set wsData = ThisWorkbook.Sheets("Data")
    
    ' Create validation report sheet
    On Error Resume Next
    Set wsValidation = ThisWorkbook.Sheets("Data_Quality")
    If wsValidation Is Nothing Then
        Set wsValidation = ThisWorkbook.Sheets.Add
        wsValidation.Name = "Data_Quality"
    End If
    
    wsValidation.Cells.Clear
    
    With wsValidation
        .Cells(1, 1) = "DATA QUALITY REPORT"
        .Cells(1, 1).Font.Bold = True
        .Cells(1, 1).Font.Size = 16
        
        ' Check for missing data
        .Cells(3, 1) = "MISSING DATA ANALYSIS"
        .Cells(3, 1).Font.Bold = True
        
        ' Check for duplicates
        .Cells(10, 1) = "DUPLICATE RECORDS"
        .Cells(10, 1).Font.Bold = True
        
        ' Data consistency checks
        .Cells(17, 1) = "DATA CONSISTENCY CHECKS"
        .Cells(17, 1).Font.Bold = True
    End With
End Sub

' ============================================================================
' EXPORT FUNCTIONS
' ============================================================================

Sub ExportReportsAsPDF()
    ' Export key reports as PDF files
    Dim sheets As Variant
    Dim i As Integer
    
    sheets = Array("Dashboard", "Registration", "Classes", "Demographics")
    
    For i = 0 To UBound(sheets)
        ThisWorkbook.Sheets(sheets(i)).ExportAsFixedFormat _
            Type:=xlTypePDF, _
            Filename:=ThisWorkbook.Path & "\" & sheets(i) & "_Report.pdf"
    Next i
    
    MsgBox "Reports exported as PDF files!", vbInformation
End Sub

' ============================================================================
' INSTRUCTIONS FOR USE:
' 
' 1. Save this as a .xlsm file (Excel Macro-Enabled Workbook)
' 2. Create a sheet called "Data" and paste your CSV data there
' 3. Press Alt+F11 to open VBA editor
' 4. Insert > Module and paste this code
' 5. Close VBA editor and run GenerateAllReports() macro
' 
' The workbook will create comprehensive analytics across multiple sheets
' ============================================================================
